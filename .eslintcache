[{"/home/vero/portfolio-2.0/src/index.js":"1","/home/vero/portfolio-2.0/src/App.js":"2","/home/vero/portfolio-2.0/src/serviceWorker.js":"3","/home/vero/portfolio-2.0/src/components/ContactMe.js":"4","/home/vero/portfolio-2.0/src/components/Navbar.js":"5","/home/vero/portfolio-2.0/src/components/AboutMe.js":"6","/home/vero/portfolio-2.0/src/components/MyWork.js":"7","/home/vero/portfolio-2.0/src/components/MainPage.js":"8","/home/vero/portfolio-2.0/src/components/services/ContactMeService.js":"9"},{"size":594,"mtime":1610637045795,"results":"10","hashOfConfig":"11"},{"size":1130,"mtime":1610637045787,"results":"12","hashOfConfig":"11"},{"size":5086,"mtime":1610637045795,"results":"13","hashOfConfig":"11"},{"size":4428,"mtime":1610637045787,"results":"14","hashOfConfig":"11"},{"size":2058,"mtime":1610637045791,"results":"15","hashOfConfig":"11"},{"size":1420,"mtime":1610736080866,"results":"16","hashOfConfig":"11"},{"size":8718,"mtime":1620081957593,"results":"17","hashOfConfig":"11"},{"size":193991,"mtime":1610637045791,"results":"18","hashOfConfig":"11"},{"size":456,"mtime":1610637045795,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"14hiks6",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/vero/portfolio-2.0/src/index.js",[],["41","42"],"/home/vero/portfolio-2.0/src/App.js",["43"],"import React, { useState } from \"react\";\nimport \"./App.css\";\nimport MainPage from \"./components/MainPage\";\nimport ContactMe from \"./components/ContactMe\";\nimport Navbar from \"./components/Navbar\";\nimport AboutMe from \"./components/AboutMe\";\nimport MyWork from \"./components/MyWork\";\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(true);\n  return (\n    <div className=\"App\">\n      <i\n        className=\"far fa-lightbulb fa-2x icon-toggle\"\n        style={{ color: darkMode ? \"#999999\" : \"#fdab00\" }}\n        onClick={() => setDarkMode(!darkMode)}\n      ></i>\n      <Navbar color={darkMode ? \"dark-mode mode\" : \"light-mode mode\"} />\n      <MainPage\n        color={darkMode ? \"dark-mode mode\" : \"light-mode mode\"}\n        id=\"home\"\n      />\n      <AboutMe\n        id=\"about-me\"\n        color={darkMode ? \"dark-mode mode\" : \"light-mode mode\"}\n      />\n      <MyWork\n        id=\"my-work\"\n        color={darkMode ? \"dark-mode mode\" : \"light-mode mode\"}\n      />\n      {/* <ContactMe\n        id=\"contact-me\"\n        color={darkMode ? \"dark-mode mode\" : \"light-mode mode\"}\n      /> */}\n    </div>\n  );\n}\n\nexport default App;\n","/home/vero/portfolio-2.0/src/serviceWorker.js",[],"/home/vero/portfolio-2.0/src/components/ContactMe.js",["44"],"// import React, { useState } from \"react\";\n\n// export default function ContactMe({ id, color }) {\n//   const initialValues = {\n//     subject: \"\",\n//     email: \"\",\n//     message: \"\",\n//   };\n//   const [message, setMessage] = useState({ initialValues });\n//   const [onSubmitting, setOnSubmitting] = useState(false);\n//   const [values, setValues] = useState({});\n\n//   const saveMessage = (event) => {\n//     setOnSubmitting(true);\n//     event.preventDefault();\n//     const data = {\n//       subject: message.subject,\n//       email: message.email,\n//       message: message.message,\n//     };\n//   };\n//   const resetForm = (e) => {\n//     e.target.reset(e);\n//   };\n\n//   const handleChange = (e) => {\n//     e.persist();\n//     setMessage({ ...message, [e.target.name]: e.target.value });\n//   };\n//   return (\n//     <>\n//       <div id={id} className={`contact-me ${color}`}>\n//         <h2 className=\"title\">Keep in touch</h2>\n//         <div className=\"form-message\">\n//           <form onSubmit={saveMessage} className=\"contact-me-form\">\n//             <label htmlFor=\"subject\" className=\"label\">\n//               Subject:\n//             </label>\n//             <input\n//               onChange={handleChange}\n//               value={values.subject}\n//               className=\"input\"\n//               name=\"subject\"\n//               type=\"text\"\n//               placeholder=\"Subject\"\n//             ></input>\n\n//             <label htmlFor=\"email\" className=\"label\">\n//               Email:\n//             </label>\n//             <input\n//               onChange={handleChange}\n//               value={values.email}\n//               className=\"input\"\n//               name=\"email\"\n//               type=\"email\"\n//               placeholder=\"Email\"\n//             />\n\n//             <label htmlFor=\"message\" className=\"label\">\n//               Message:\n//             </label>\n//             <textarea\n//               onChange={handleChange}\n//               value={values.message}\n//               className=\"input\"\n//               rows=\"5\"\n//               cols=\"50\"\n//               id=\"message\"\n//               name=\"message\"\n//               type=\"text\"\n//               placeholder=\"Enter your message\"\n//             />\n//             <button className=\"btn sm\">Send message!</button>\n//           </form>\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n\n\nimport React from \"react\";\nimport CONTACTME_SERVICE from \"./services/ContactMeService\";\nimport { useForm } from \"react-hook-form\";\n\nexport default function Contact({id, color}) {\n  const { register, handleSubmit, watch, errors } = useForm({\n    defaultValues: {\n      subject: \"\",\n      email: \"\",\n      message: \"\",\n    },\n  });\n\n  const saveMessage = (data, e) => {\n    const filledForm = {\n      subject: data.subject,\n      email: data.email,\n      message: data.message,\n    };\n    CONTACTME_SERVICE.message(filledForm);\n    e.target.reset(e);\n  };\n\n  return (\n    <div id={id} className={`contact-me ${color}`}>\n      <div className=\"form-message\">\n        <form onSubmit={handleSubmit(saveMessage)} className=\"contact-me-form\">\n          <label htmlFor=\"subject\" className=\"label\">\n            Subject:\n          </label>\n          <input\n            aria-invalid={errors.name ? \"true\" : \"false\"}\n            className=\"input\"\n            name=\"subject\"\n            type=\"text\"\n            placeholder=\"Subject\"\n            ref={register({ required: true })}\n          ></input>\n          {errors.subject && <span>This field is required</span>}\n\n          <label htmlFor=\"email\" className=\"label\">\n            Email:\n          </label>\n          <input\n            className=\"input\"\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            ref={register({ required: true })}\n          />\n          {errors.email && <span>This field is required</span>}\n\n          <label htmlFor=\"message\" className=\"label\">\n            Message:\n          </label>\n          <textarea\n            className=\"input\"\n            rows=\"5\"\n            cols=\"50\"\n            id=\"message\"\n            name=\"message\"\n            type=\"text\"\n            placeholder=\"Enter your message\"\n            ref={register({ required: true })}\n          />\n          {errors.message && <span>This field is required</span>}\n          <button className=\"btn sm\">Send message!</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n","/home/vero/portfolio-2.0/src/components/Navbar.js",[],"/home/vero/portfolio-2.0/src/components/AboutMe.js",[],"/home/vero/portfolio-2.0/src/components/MyWork.js",["45"],"/home/vero/portfolio-2.0/src/components/MainPage.js",[],"/home/vero/portfolio-2.0/src/components/services/ContactMeService.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":4,"column":8,"nodeType":"52","messageId":"53","endLine":4,"endColumn":17},{"ruleId":"50","severity":1,"message":"54","line":88,"column":35,"nodeType":"52","messageId":"53","endLine":88,"endColumn":40},{"ruleId":"50","severity":1,"message":"55","line":4,"column":8,"nodeType":"52","messageId":"53","endLine":4,"endColumn":18},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'ContactMe' is defined but never used.","Identifier","unusedVar","'watch' is assigned a value but never used.","'MatrixGame' is defined but never used.","no-global-assign","no-unsafe-negation"]